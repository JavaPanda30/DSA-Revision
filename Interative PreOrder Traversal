/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer> ans = new ArrayList<>();
    public List<Integer> preorderTraversal(TreeNode root) {
        Stack<TreeNode> stk = new Stack<>();
        stk.push(root);
        if(root==null){
            return ans;
        }
        while(!stk.isEmpty()){
            int val = stk.size();
            for(int i=0;i<val;i++){
                TreeNode a = stk.pop();
                ans.add((int)a.val);
                if(a.right!=null){
                    stk.push(a.right);
                }
                if(a.left!=null){
                    stk.push(a.left);
                }
            }
        }
        return ans;
    }
}
